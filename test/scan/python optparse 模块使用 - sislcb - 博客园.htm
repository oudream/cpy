<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0061)http://www.cnblogs.com/sislcb/archive/2008/11/29/1343919.html -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML 
xmlns="http://www.w3.org/1999/xhtml"><HEAD>
<META content="text/html; charset=utf-8" http-equiv="Content-Type"><TITLE>python 
optparse 模块使用 - sislcb - 博客园</TITLE><LINK rel="stylesheet" type="text/css" href="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/common.css">
<LINK id="MainCss" rel="stylesheet" type="text/css" href="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/style.css">
<LINK rel="stylesheet" type="text/css" href="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/common2.css">
<LINK rel="stylesheet" type="text/css" href="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/shStyle.css">
<LINK title="RSS" rel="alternate" type="application/rss+xml" href="http://www.cnblogs.com/sislcb/rss">
<LINK title="RSD" rel="EditURI" type="application/rsd+xml" href="http://www.cnblogs.com/sislcb/rsd.xml">
<LINK rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.cnblogs.com/sislcb/wlwmanifest.xml">
<SCRIPT type="text/javascript" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/jquery.js"></SCRIPT>

<SCRIPT type="text/javascript">
var currentBlogApp = 'sislcb';
</SCRIPT>

<SCRIPT type="text/javascript" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/common.js"></SCRIPT>

<SCRIPT type="text/javascript" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/json2.js"></SCRIPT>

<SCRIPT type="text/javascript" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/syntaxHighlighter.js"></SCRIPT>

<META name="GENERATOR" content="MSHTML 9.00.8112.16443"></HEAD>
<BODY><A name="top"></A><!--done-->
<DIV id="header"><!--done-->
<DIV class="header">
<DIV class="headerText"><A id="Header1_HeaderTitle" class="headermaintitle" 
href="http://www.cnblogs.com/sislcb/">python学习</A><BR></DIV></DIV></DIV>
<DIV id="mylinks"><!--done--><A id="MyLinks1_HomeLink" class="listitem" href="http://www.cnblogs.com/">博客园</A>&nbsp;&nbsp;::&nbsp;
<A id="MyLinks1_MyHomeLink" class="listitem" href="http://www.cnblogs.com/sislcb/">首页</A>&nbsp;&nbsp;::&nbsp;
<A id="MyLinks1_NewPostLink" class="listitem" href="http://www.cnblogs.com/sislcb/admin/EditPosts.aspx?opt=1" 
rel="nofollow">新随笔</A>&nbsp;&nbsp;::&nbsp;<A accessKey="9" id="MyLinks1_ContactLink" 
class="listitem" href="http://space.cnblogs.com/msg/send/sislcb" 
rel="nofollow">联系</A>&nbsp;&nbsp;::&nbsp;<A id="MyLinks1_Syndication" class="listitem" 
href="http://www.cnblogs.com/sislcb/rss">订阅</A>&nbsp;<A id="MyLinks1_XMLLink" 
href="http://www.cnblogs.com/sislcb/rss"><IMG alt="订阅" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/xml.gif"></A>&nbsp;&nbsp;::&nbsp;
<A id="MyLinks1_Admin" class="listitem" href="http://www.cnblogs.com/sislcb/admin/EditPosts.aspx" 
rel="nofollow">管理</A></DIV>
<DIV id="mytopmenu">
<DIV id="mystats"><!--done-->
<DIV class="blogStats">posts - 39,&nbsp; comments - 13,&nbsp; trackbacks - 0
</DIV></DIV></DIV>
<DIV id="leftcontent">
<DIV id="leftcontentcontainer"><!--done-->
<DIV class="news">公告</DIV>
<DIV class="newsItem">
<DIV id="blog-news"></DIV></DIV>
<DIV style="display: none;" id="blog-calendar-block">
<DIV id="blog-calendar"></DIV></DIV>
<DIV id="blog-sidecolumn"></DIV></DIV></DIV>
<DIV id="centercontent"><!--done-->
<DIV class="post">
<DIV class="postTitle"><A id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/sislcb/archive/2008/11/29/1343919.html">python 
optparse 模块使用</A></DIV>
<DIV id="cnblogs_post_body">
<P><FONT size="3">使用命令行时，如果要添加选项的话，python 
2.3里新增加了一个模块叫optparse，也是专门来处理命令行选项的。</FONT><BR>
<TABLE style="margin: 10px; border: 1px solid rgb(0, 0, 0);" class="FCK__ShowTableBorders" 
cellSpacing="0" cellPadding="10" width="90%">
  <TBODY>
  <TR>
    <TD bgColor="#eeeeee"><FONT face="Courier New">from optparse import 
      OptionParser <BR>parser = OptionParser() <BR>parser.add_option("-p", 
      "--pdbk", action="store_true", 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      dest="pdcl", 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      default=False, 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      help="write pdbk data to oracle db") <BR>parser.add_option("-z", "--zdbk", 
      action="store_true", 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      dest="zdcl", 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      default=False, 
      <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      help="write zdbk data to oracle db") <BR><BR>(options, args) = 
      parser.parse_args() <BR><BR>if options.pdcl==True: <BR>&nbsp;&nbsp;&nbsp; 
      print 'pdcl is true' <BR>if options.zdcl==True: <BR>&nbsp;&nbsp;&nbsp; 
      print 'zdcl is true' <BR></FONT></TD></TR></TBODY></TABLE><BR><FONT 
size="3">add_option用来加入选项，action是有store，store_true，store_false等，dest是存储的变量，default是缺省值，help是帮助提示 
<BR><BR>最后通过parse_args()函数的解析，获得选项，如options.pdcl的值。</FONT>
<P></P>
<P></P>
<P><FONT size="3"><STRONG>基本使用流程:</STRONG> <BR><BR>》1.產生一個 optparse.OptionParser 
的物件。可以在產生時將"程式的命令列說明" (usage) 做為參數,交給 OptionParser 的建構子: <BR></FONT></P><FONT 
size="3">
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>from optparse <FONT class="java-reserved_word"><STRONG>import</STRONG></FONT> OptionParser
    MSG_USAGE = <FONT class="java-string">"myprog[ -f &lt;filename&gt;][ -s &lt;xyz&gt;] arg1[, arg2...]"</FONT>
    optParser = OptionParser(MSG_USAGE)</PRE></TD></TR></TBODY></TABLE><BR>》2.呼叫 
OptionParser.add_option() 加入接受的 option: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR>4<BR>5<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>optParser.add_option(<FONT class="java-string">"-f"</FONT>,
                         <FONT class="java-string">"--file"</FONT>,
                         action = <FONT class="java-string">"store"</FONT>,
                         type = <FONT class="java-string">"string"</FONT>,
                         dest = <FONT class="java-string">"fileName"</FONT>)</PRE></TD></TR></TBODY></TABLE><BR>參數 
action 有許多種類,預設是 "store",所以即使省略也無妨,其它的 action 種類在下面會繼續說明。 <BR><BR>若有一個以上的 
option,重覆上述的方式加入(注意:以下省略了 action 參數): <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR>4<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>optParser.add_option(<FONT class="java-string">"-s"</FONT>,
                         <FONT class="java-string">"--someopt"</FONT>,
                         type = <FONT class="java-string">"string"</FONT>,
                         dest = <FONT class="java-string">"someopt"</FONT>)</PRE></TD></TR></TBODY></TABLE><BR>》3.呼叫 
OptionParser.parse_args() 進行解讀。如果沒有傳入參數, OptionParser 預設會以 sys.argv[1:] 
為對象進行解讀。OptionParser.parse_args() 會傳回一個 tuple,由 optparse.Values 和 一個 list 
所組成。下例傳入一個假造的參數列: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR>4<BR>5<BR>6<BR>7<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>fakeArgs = [<FONT class="java-string">'-f'</FONT>, <FONT class="java-string">'thefile.txt'</FONT>, <FONT class="java-string">'-s'</FONT>, <FONT class="java-string">'xyz'</FONT>, <FONT class="java-string">'arg1'</FONT>, <FONT class="java-string">'arg2'</FONT>, <FONT class="java-string">'arge'</FONT>]
    
    options, args = optParser.parse_args(fakeArgs)
    
    print options.fileName
    print options.someopt
    print args</PRE></TD></TR></TBODY></TABLE><BR>最後會得到的輸出結果: 
<BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>thefile.txt
    xyz
    [<FONT class="java-string">'arg1'</FONT>, <FONT class="java-string">'arg2'</FONT>, <FONT class="java-string">'arge'</FONT>]</PRE></TD></TR></TBODY></TABLE><BR>這是一個簡單的範例,說明了 
OptionParser 的一般使用方式。透過這個例子,可以看到如果為程式加入 option, 並且在程式中取得 option argument 和 
positional argument。OptionParser.parse_args() 還有許多用法,下面會說明一部份。 
<BR><BR><STRONG>為程式加入 flag option:</STRONG> <BR><BR>許多的 Unix 命令擁有 "-v", "-q" 的 
option,代表"提供詳細訊息"或是"不顯示訊息"。要做到這一點,只要在程式中加入下列的 option : <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>parser.add_option(<FONT class="java-string">"-v"</FONT>, action=<FONT class="java-string">"store_true"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>)
    parser.add_option(<FONT class="java-string">"-q"</FONT>, action=<FONT class="java-string">"store_false"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>)
    opts, args = parser.parse_args()</PRE></TD></TR></TBODY></TABLE><BR>第一個 
add_option() 加入了一個 "-v" 的 option;如果命令列參數中出現了 "-v",則 opts.verbose 將會是 
True;相反的,第二個 add_option() 加入了一個 "-q" option;如果命令列參數中出現了 "-q",則 opts.verbose 將會是 
False,這兩者並不相悖,程式可以設計成:當收到 "-v" 時,顯示詳細訊息;當收到 "-q" 
時,顯示概略訊息,或完全不顯示;當兩者都沒有收到,則顯示一般的訊息。 <BR><BR><STRONG>設定 option 的預設值:</STRONG> 
<BR><BR>上述的例子都假設命令例會收到預期中的 option,那麼如果沒有 option 時,接收到的 option 值會是什麼呢?答案是 
None!如果想為 option 提供預設值,只要在 OptionParser.parse_args()中指定參數 default 就行了: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>parser.add_option(<FONT class="java-string">"-v"</FONT>, action=<FONT class="java-string">"store_true"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>, <FONT class="java-reserved_word"><STRONG>default</STRONG></FONT> = True)
    parser.add_option(<FONT class="java-string">"-q"</FONT>, action=<FONT class="java-string">"store_false"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>)
    opts, args = parser.parse_args()</PRE></TD></TR></TBODY></TABLE><BR>上述的程式碼為程式加入了兩個 
option,當 "-v" 沒有出現時, opts.verbose 預設值為 True;當 "-q" 被指定時, opts.verbose 被設定為 
False,和上一個例子有點不同。再看下一個例子: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>parser.add_option(<FONT class="java-string">"-v"</FONT>, action=<FONT class="java-string">"store_true"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>, default=False)
parser.add_option(<FONT class="java-string">"-q"</FONT>, action=<FONT class="java-string">"store_false"</FONT>, dest=<FONT class="java-string">"verbose"</FONT>, default=True)</PRE></TD></TR></TBODY></TABLE><BR>opts.verbose 
的預設值會是什麼?答案是 True,最後一個指定到同一個目標的 option 預設值會被採用。 <BR><BR>一般的 option 亦可加入預設值: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>parser.add_option(<FONT class="java-string">"-f"</FONT>, action=<FONT class="java-string">"store"</FONT>, dest=<FONT class="java-string">"fileName"</FONT>, <FONT class="java-reserved_word"><STRONG>default</STRONG></FONT> = <FONT class="java-string">"defaultConfig.txt"</FONT>)</PRE></TD></TR></TBODY></TABLE><BR><STRONG>為程式加入說明:</STRONG> 
<BR><BR>標準的 Unix 命令大多有著 "-h", "--help" 的 option,會將使用說明印出來。在 
OptionParser.parse_args() 中指定 "help" 參數,並指定說明的字串,就可以為這個 option 加入說明了: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR>4<BR>5<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>parser.add_option(<FONT class="java-string">"-v"</FONT>,
                      action=<FONT class="java-string">"store_true"</FONT>,
                      dest=<FONT class="java-string">"verbose"</FONT>,
                      default=False,
                      help=<FONT class="java-string">"make lots of noise [default]"</FONT>)</PRE></TD></TR></TBODY></TABLE><BR>當程式收到 
"-h" 或 "--help",交給 OptionParser 解讀時,會自動印出說明內容,而忽略其它的 argument: <BR><BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR>2<BR>3<BR>4<BR>5<BR>6<BR>7<BR>8<BR>9<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>usage: &lt;yourscript&gt; [options] arg1 arg2
 
    options:
      -h, --help           show <FONT class="java-reserved_word"><STRONG>this</STRONG></FONT> help message and exit
      -v, --verbose        make lots of noise [<FONT class="java-reserved_word"><STRONG>default</STRONG></FONT>]
      -q, --quiet          be vewwy quiet (I<FONT class="java-string">'m hunting wabbits)</FONT>
      -fFILE, --file=FILE  write output to FILE
      -mMODE, --mode=MODE  interaction mode: one of <FONT class="java-string">'novice'</FONT>, <FONT class="java-string">'intermediate'</FONT>
                           [<FONT class="java-reserved_word"><STRONG>default</STRONG></FONT>], <FONT class="java-string">'expert'</FONT></PRE></TD></TR></TBODY></TABLE><BR>還記得一開始提到交給 
OptionParser 建構子的參數 MSG_USAGE 嗎? optparse 套件對 usage 訊息也提供了一些支援。在 usage 中使用 
"%prog" 關鍵字, OptionParser 會自動將其代換為程式名,即 sys.args[0]: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>usage = <FONT class="java-string">"usage: %prog [options] arg1 arg2"</FONT></PRE></TD></TR></TBODY></TABLE><BR>如果程式名為 
"myprog",則出現在 help 訊息中的 usage 就會是: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE>usage = <FONT class="java-string">"usage: myprog [options] arg1 arg2"</FONT></PRE></TD></TR></TBODY></TABLE><BR>如果OptionParser 
建構子沒有收到任何參數,則會自動產生一個 usage 訊息: <BR>
<TABLE class="java FCK__ShowTableBorders" border="0" cellSpacing="1" 
cellPadding="3" bgColor="#999999">
  <TBODY>
  <TR>
    <TD bgColor="#dddddd" vAlign="top" width="1" align="left"><PRE><FONT color="#555555">1<BR></FONT></PRE></TD>
    <TD bgColor="#ffffff" vAlign="top" align="left"><PRE><FONT class="java-string">"usage: %prog [options]"</FONT></PRE></TD></TR></TBODY></TABLE><BR>前提是程式沒有 
positional argument。甭擔心 option 在 help 訊息中排列的方式, OptionParser 會搞定一切,如同前面程式所示。 
<BR></FONT>
<P></P></DIV>
<DIV id="MySignature"></DIV>
<SCRIPT type="text/javascript">
var isLogined = false;
var cb_blogId = 43317;
var cb_entryId = 1343919;
var cb_blogApp = currentBlogApp;
var cb_blogUserGuid = "6f52420b-63cf-dd11-9e4d-001cf0cd104b";
var cb_entryCreatedDate = '2008/11/29 18:12:00';
var enableGoogleAd = true;
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
</SCRIPT>

<DIV class="clear"></DIV>
<DIV id="blog_post_info_block">
<DIV id="blog_post_info"></DIV>
<DIV class="clear"></DIV>
<DIV id="post_next_prev"></DIV></DIV>
<SCRIPT type="text/javascript">
    //SyntaxHighlighter.config.strings.expandSource = '<span><img src="http://static.cnblogs.com/images/expand-code.gif" alt="" class="expand-code-icon"/>View Code</span>';
    $(function () {             
        fixPostBodyFormat();
        loadAdUnderPost();
        loadBlogSignature();
        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);        
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);        
    });
</SCRIPT>

<DIV class="postDesc">posted on <SPAN id="post-date">2008-11-29 18:12</SPAN> <A 
href="http://www.cnblogs.com/sislcb/">sislcb</A> 阅读(2824) 评论(<SPAN id="post-comment-count">0</SPAN>) 
 <A href="http://www.cnblogs.com/sislcb/admin/EditPosts.aspx?postid=1343919" 
rel="nofollow">编辑</A> <A onclick="AddToWz(1343919);return false;" href="http://www.cnblogs.com/sislcb/archive/2008/11/29/1343919.html#">收藏</A></DIV>
</DIV><IMG alt="" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/1343919.jpg" 
width="1" height="1">
<DIV id="blog-comments-placeholder"></DIV>
<SCRIPT type="text/javascript">var commentManager = new blogCommentManager();commentManager.loadComments();</SCRIPT>

<DIV id="comment_form" class="commentform">
<DIV id="divCommentShow"></DIV>
<DIV id="comment_nav"><SPAN id="span_refresh_tips"></SPAN><A id="lnk_RefreshComments" 
onclick="return RefreshCommentList();" href="javascript:void(0);">刷新评论</A><A 
onclick="return RefreshPage();" href="http://www.cnblogs.com/sislcb/archive/2008/11/29/1343919.html#">刷新页面</A><A 
href="http://www.cnblogs.com/sislcb/archive/2008/11/29/1343919.html#top">返回顶部</A></DIV>
<DIV id="comment_form_container"></DIV>
<SCRIPT type="text/javascript">if (typeof commentManager === 'undefined') {
        commentManager = new blogCommentManager();
    }
    commentManager.loadCommentForm();   
</SCRIPT>

<DIV id="ad_text_under_commentbox" class="ad_text_commentbox"></DIV>
<DIV id="site_nav_under"><A title="程序员的网上家园" href="http://www.cnblogs.com/" 
target="_blank">博客园首页</A><A title="程序员问答社区" href="http://q.cnblogs.com/" target="_blank">博问</A><A 
title="IT新闻" href="http://news.cnblogs.com/" target="_blank">新闻</A><A href="http://home.cnblogs.com/ing/" 
target="_blank">闪存</A><A href="http://job.cnblogs.com/" 
target="_blank">程序员招聘</A><A href="http://kb.cnblogs.com/" 
target="_blank">知识库</A></DIV>
<DIV id="ad_under_post_holder"></DIV>
<DIV id="HistoryToday" class="c_ad_block"></DIV></DIV></DIV><!--done-->
<DIV class="footer">	Powered by: 	<BR><A style="font-family: Verdana; font-size: 12px;" 
id="Footer1_Hyperlink3" href="http://www.cnblogs.com/" 
name="Hyperlink1">博客园</A><BR>Copyright ©2013 sislcb</DIV>
<SCRIPT type="text/javascript" src="python%20optparse%20模块使用%20-%20sislcb%20-%20博客园_files/google-analytics.js"></SCRIPT>
</BODY></HTML>
